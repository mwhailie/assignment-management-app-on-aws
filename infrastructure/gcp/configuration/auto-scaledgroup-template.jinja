{#
Copyright 2016 Google Inc. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}

resources:

- type: compute.v1.instanceTemplate
  name: {{ env["deployment"] }}-instance-template
  properties:
    properties:
      machineType: f1-micro
      metadata:
        items:
          - key: google-container-manifest
            value: | 
              apiVersion: v1
              kind: Pod
              metadata:
                name: simple-echo
              spec:
                containers:
                  - name: simple-echo
                    image: gcr.io/google-containers/busybox
                    command: ["nc", "-p", "8080", "-l", "-l", "-e", "echo", "HTTP/1.0 200 OK\r\nContent-Length:4\r\n\r\nHey!"]
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 8080
                        hostPort: 80
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: projects/google-containers/global/images/family/container-vm
      networkInterfaces:
      - network: $(ref.{{ env["deployment"] }}-network.selfLink)
        accessConfigs:
          - type: ONE_TO_ONE_NAT

{% for region in properties["regions"] %}

- type: compute.v1.regionInstanceGroupManager
  name: {{ env["deployment"] }}-region-instance-group-{{ region }}
  properties:
    region: {{ region }}
    targetSize: 1
    baseInstanceName: {{ env["deployment"] }}-instance
    instanceTemplate: $(ref.{{ env["deployment"] }}-instance-template.selfLink)

- type: compute.v1.regionAutoscaler
  name: {{ env["deployment"] }}-autoscaler-{{ region }}
  properties:
    region: {{ region }}
    target: $(ref.{{ env["deployment"] }}-region-instance-group-{{ region }}.selfLink)
    autoscalingPolicy:
      minNumReplicas: 1
      maxNumReplicas: 4

{% endfor %}

- type: compute.v1.httpHealthCheck
  name: {{ env["deployment"] }}-health-check
  properties:
    port: 80
    checkIntervalSec: 1
    timeoutSec: 1
    requestPath: /

- type: compute.v1.backendService
  name: {{ env["deployment"] }}-backend-service
  properties:
    port: 80
    timeoutSec: 1
    backends: 
      {% for region in properties["regions"] %}
      - group: $(ref.{{ env["deployment"] }}-region-instance-group-{{ region }}.instanceGroup)
      {% endfor %}
    healthChecks:
      - $(ref.{{ env["deployment"] }}-health-check.selfLink)

- type: compute.v1.urlMap
  name: {{ env["deployment"] }}-url-map
  properties:
    defaultService: $(ref.{{ env["deployment"] }}-backend-service.selfLink)

- type: compute.v1.targetHttpProxy
  name: {{ env["deployment"] }}-target-http-proxy
  properties:
    urlMap: $(ref.{{ env["deployment"] }}-url-map.selfLink)

- type: compute.v1.globalForwardingRule
  name: {{ env["deployment"] }}-global-forwarding-rule
  properties:
    portRange: 80
    target: $(ref.{{ env["deployment"] }}-target-http-proxy.selfLink)